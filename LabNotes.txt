01/06/15
YESTERDAY
Yesterday, I was able to run the vrecon (specifically vrecon_w) code on the lab computers for a dataset of Jacob's. The dataset that I ran can be found in: /projects/souris/jacob/fid/29jul14.fid

I ran vrecon to get the datafiles split with respect to brain and gradient direction - this should make the analysis a bit easier. The notion is that we can easily play with these datasets to our heart's content, and then simply run them through an FFT algorithm to obtain the images that we are looking for. In addition, MATLAB should be able to write the ``data-altered" files to a very similar minc file, making the output similar to what we use in the lab. 


TODAY
As per Jacob, I may have made a decent mistake. The notion is that we should actually run the vrecon using the tag -rawfloat as this can help us out later. Jacob has some code already written that can handle the data in this way, so it may be beneficial to do it this way.

12:55PM - Monitor and Disown
I am monitoring the progress of the redo of vrecon, as I made yet another mistake. Once this is completed, I will begin with the proper vrecon. Since I am running this over PuTTY, I need to disown the jobs in order to be assured that they complete. The way I plan on doing this is by appending "&" to the end, then "jobs", then "disown", then "jobs" as a check. Information can be found here (http://serverfault.com/questions/311593/keeping-a-linux-process-running-after-i-logout)

1:55PM - RAW test and MINC searching
It finished. I'm looking at a .raw file now in MATLAB. First, I'm checking if MATLAB can even open the file. If it can't, we're in a bit of hot water. The important data is deemingly extremely difficult to locate in the minc structures, however, if I can do that, this may be a better way to go. Upon looking at Jacob's code, he seems to just pt it through a second recon that ends up converting the data into minc.
Matlab seems to want to crash when using uiopen to open the .RAW files, and thus, fopen may be a better option. 

2:50PM - Update for MINC searching - SUCCESS!
MNC files can be readily read into MATLAB as long as you know what you're looking for and where it is.
By using H5INFO in accordance with H5READ, I was able to find exactly what I was looking for -- the data. The data is buried in the file. If we assume that `info' is a variable that has all of the information of the file that we need, at location `filename', then in MATLAB, it looks like:
info = h5info(filename); % We use this in order to look for the different pieces of the information that we need. In a 			   perfectly replicatable system, this only needs to be done once
data  = h5read(filename,'/minc-2.0/image/0/image') %'/minc-2.0/image/0/image' is where the image data is seemingly held

3:00PM - Beginning to write a function to handle the zero-filling
The notion of what the function will do is in the function information (i.e. comments right under the name.) In addition, this will be done on GitHub in order to have version control!
The first copy of this code is going to be a brute force method to write it, which can be cleaned up later on. As a side note, I am currently unsure as to whether or not the gradient information is held within the minc file. If it is, the code can be made much more robust, as it won't rely on an external txt file that I wrote with all of the gradient values written (in their 3 decimal point approximation - given to me by Jacob, from a paper). 

10:33PM
Having some troubles with the code, some unusual errors are popping up, but I'm trying to solve them as I go along. One of them came from meshgrid, and how it handles certain things, that was fixed relatively easily though. My most recent error is this "Error using  .* Integers can only be combined with integers of the same class, or scalar doubles." So, it looks like I'll need to figure out either the class of the data that I'm working with, or just have it go to a scalar double. 

11:46PM 
The only thing left to do would be to possibly make this code functional, and thus allow it to run over an extended period of time on the computers at work. The only issue that could arise with this is the fact that they do not have MATLAB installed on them. A possible fix would be to bring my hard drive and run everything through that - though I hope formatting it won't be necessary. The size of the data files may be a problem for a USB.


01/07/15
Meeting with Brian
---------------------
- Ask Jacob about the dimensionality of how he does his scans - make sure that we are doing the analysis using the gradient vector correctly
- For this first experiment, given the readout gradient, we can use a circle to match the size of the strip for the other readout directions
- Make sure that it can read back the data that we have written out using H5READ
- Want to compare the unfiltered data from MATLAB and the filtered data to see differences, as well as what the full dataset from MATLAB looks like in comparison to vrecon. Here, we are trying to make sure that we don't have any differences from how the data is stored in the mnc file!

- We need a comparison of other no CS undersampling techniques. Parallel to GD, lo-res and perpendicular


01/08/15
Post Meeting Analysis - Answering the notes from 01/07/15
-------------------------------------------------------------
- Ask Jacob about the dimensionality of how he does his scans - make sure that we are doing the analysis using the gradient vector:
	- Jacob said that it is set up such that Gx is Phase Encode (PE), Gy is ReadOut (RO), and Gz is SLice (SL)
	- The question now is, what does this mean with respect to the code? 
- For this first experiment, given the readout gradient, we can use a circle to match the size of the strip for the other readout directions
	- This will be added to the MATLAB code, see GitHub for details (https://github.com/aasalerno/CompressedSensing)
- Make sure that it can read back the data that we have written out using H5READ
	- Testing this as of 1:09PM 
	- How it is done:
		- Read in a dataset
		- Copy a file with *different data* to a different location
		- Save the data from the first file to the data location of the second file
		- Read in the data from the second file
		- Compare it to the data from the first file - it should be identical
`	- The code that was used is as follows:
                b = h5read('C:\Users\saler_000\Documents\raw\real\RealImgRaw.2.1.mnc','/minc-2.0/image/0/image');
                copyfile('C:\Users\saler_000\Documents\raw\real\RealImgRaw.2.2.mnc','test.mnc');
                h5write('test.mnc','/minc-2.0/image/0/image',b);
                b1 = h5read('test.mnc','/minc-2.0/image/0/image');
                b1 == b;
                a = ans;
                test1 = prod(size(a)); % Tells us the size of a (i.e. how many 1's we should have)
                test2 = sum(a(:));
		test1 == test2 % If this gives 1, we're good!
	- Using this, we get the value that we expect.		 
- Want to compare the unfiltered data from MATLAB and the filtered data to see the differences that exist, as well as what the full dataset from MATLAB looks like in comparison to vrecon. Here, we are trying to make sure that we don't have any differences from how the data is stored in the mnc file!
	- One thing to note is what Matthijs said about how the data is cast by the visualization tools... May need to ensure that we do the FFT in the same datatype as it would be done in vrecon (i.e. is this before or after conversion? And if before, how will we change back to the old dataset?)
- We need a comparison of other no CS undersampling techniques. Parallel to GD, lo-res and perpendicular
	- Will change the way that the filter is done, see GitHub for details (https://github.com/aasalerno/CompressedSensing)
	- Likely will do it in such a way that we can effortlessly change the filter between different scans for the greatest simplicity

2:00PM - Error with input of data
Found a relatively big issue with respect to how MATLAB is reading in the data. Although the data dimensions are z,x,y for RealImgRaw._._.mnc, with the dimensions of z (180), x (180), y(324), the dataset has dimensions of 324x180x180.
	- This could be either y,x,z or y,z,x
	- In order to test this, Matthijs suggested to do a mincreshape and look at where the data is held. I changed the size of z to 200, and noticed the final answer had dimensions of 324x180x200, meaning that the dimensions are y,x,z. This seems to be an inversion (for no reason) on MATLAB's part.
	- What is the best way to handle this?! We don't want to have any errors... A possible idea would be to apply a mincreshape if there are data that have the same dimensions
		- So, apparently the information can be found! h5readatt(filename,'minc-2.0/info/vnmr','array')
		- If we know what the order is (which we do, thanks to Jacob), we can give attributes to each of the dimensions (i.e. possibly a file saying what everything is that can be made for each type or something of the sort


01/09/15
9:43AM - Filter Function Alteration
At YorkU - working on Laptop (will be noted from now on)
Meeting with Brian said that we need to have different filters to compare... As it stands right now, we only have one option, but the others are to be coded in right now.
The options will be:
	- 'par' - parallel to the gradient direction
	- 'per' - perpendicular to the gradient direction
	- 'lores' - square in the center for low resolution
*Possibility to add 'circ' for a circle in the centre*
